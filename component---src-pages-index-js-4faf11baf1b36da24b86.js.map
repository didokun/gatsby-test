{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["RedirectIndex","args","_this","_React$PureComponent","call","this","window","_args$data$site$siteM","data","site","siteMetadata","languages","langs","defaultLangKey","langKey","getUserLangKey","homeUrl","withPrefix","location","replace","render","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","React","PureComponent","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","props","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"qMAKMA,cACJ,SAAAA,EAAYC,GAAM,IAAAC,EAIhB,GAHAA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,KAGsB,oBAAXC,OAAwB,KAAAC,EACCN,EAAKO,KAAKC,KAAKC,aAAaC,UAAtDC,EADyBL,EACzBK,MAAOC,EADkBN,EAClBM,eACTC,EAAUC,yBAAeH,EAAOC,GAChCG,EAAUC,qBAAU,IAAKH,EAAL,KAQ1BR,OAAOY,SAASC,QAAQH,GAfV,OAAAd,8BAmBlBkB,kBACE,OAAQC,EAAAC,EAAAC,cAAA,gBArBgBC,IAAMC,eAyBnBzB,YAER,IAAM0B,EAAS,8CChCtBC,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAAJ,EAAAG,EAAAD,EAAA,uCAAAG,IAAAL,EAAAG,EAAAD,EAAA,gCAAAI,IAAA,IAAAC,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,GAAAW,EAAAX,EAAAS,EAAAC,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAAS,EAAAG,GAAAZ,EAAAG,EAAAD,EAAA,yBAAAW,EAAAlB,IAAAK,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,aAAAZ,EAAAG,EAAAD,EAAA,6BAAAU,EAAA,WAAAZ,EAAAG,EAAAD,EAAA,yBAAAU,EAAA,OAAAZ,EAAAG,EAAAD,EAAA,4BAAAU,EAAA,UAAAZ,EAAAG,EAAAD,EAAA,+BAAAU,EAAA,iBAAAE,EAAAd,EAAA,KAAAe,EAAAf,EAAAS,EAAAK,GAAAd,EAAAG,EAAAD,EAAA,iCAAAa,EAAApB,IAAA,IAAAqB,EAAAhB,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAAc,EAAA,IAYA,IAAMX,EAAqBR,IAAMoB,cAAc,IAEzCX,EAAc,SAAAY,GAAK,OACvBV,EAAAb,EAAAC,cAACS,EAAmBc,SAApB,KACG,SAAAC,GACC,OACEF,EAAMrC,MACLuC,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOxC,MAEtDqC,EAAMzB,QAAUyB,EAAMI,UAC5BJ,EAAMrC,KAAOqC,EAAMrC,KAAKA,KAAOuC,EAAgBF,EAAMG,OAAOxC,MAGvD2B,EAAAb,EAAAC,cAAA,uCAaf,SAASQ,IACP,MAAM,IAAImB,MACR,gVATJjB,EAAYkB,UAAY,CACtB3C,KAAM4C,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBnC,OAAQgC,IAAUI,KAClBP,SAAUG,IAAUI,2BCnCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAf7C,EAAe6C,EAAf7C,SACpB8C,EAAgBC,UAAOC,4BAA4BhD,EAASiD,UAClE,OAAO3C,IAAMD,cAAc6C,IAApBC,OAAAC,OAAA,CACLpD,WACA8C,iBACGA,EAAcO,QAIrBT,EAAiBX,UAAY,CAC3BjC,SAAUkC,IAAUoB,MAAM,CACxBL,SAAUf,IAAUE,OAAOC,aAC1BA,YAGUO","file":"component---src-pages-index-js-4faf11baf1b36da24b86.js","sourcesContent":["import React from 'react';\nimport {graphql} from 'gatsby';\nimport { getUserLangKey } from 'ptz-i18n';\nimport { withPrefix } from \"gatsby-link\";\n\nclass RedirectIndex extends React.PureComponent {\n  constructor(args) {\n    super(args);\n\n    // Skip build, Browsers only\n    if (typeof window !== 'undefined') {\n      const { langs, defaultLangKey } = args.data.site.siteMetadata.languages;\n      const langKey = getUserLangKey(langs, defaultLangKey);\n      const homeUrl = withPrefix(`/${langKey}/`);\n\n      // I don`t think this is the best solution\n      // I would like to use Gatsby Redirects like: \n      // https://github.com/gatsbyjs/gatsby/tree/master/examples/using-redirects\n      // But Gatsby Redirects are static, they need to be specified at build time,\n      // This redirect is dynamic, It needs to know the user browser language.\n      // Any ideias? Join the issue: https://github.com/angeloocana/gatsby-starter-default-i18n/issues/4\n      window.location.replace(homeUrl);\n    }\n  }\n\n  render() {\n    return (<div />);\n  }\n}\n\nexport default RedirectIndex;\n\nexport const pageQuery = graphql`\n  query IndexQuery {    \n    site{\n      siteMetadata{\n        languages {\n          defaultLangKey\n          langs\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}